name: CI/CD

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:

jobs:
  run-tests:
    name: Run tests (${{ matrix.python-version }})
    strategy:
      fail-fast: false
      matrix:
        python-version: ["2.7", "3.6", "3.7", "3.8", "3.9", "3.10", "3.11"]
    runs-on: ubuntu-latest
    container: python:${{ matrix.python-version }}
    services:
      ftrack:
        image: ftrackdocker/test-server:latest
        credentials:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        ports:
          - 80:80
    steps:
      - uses: actions/checkout@v3
      - name: Run pytest
        run: |
          python setup.py test
        env:
          FTRACK_SERVER: http://ftrack:80
          FTRACK_API_USER: ${{ secrets.FTRACK_API_USER }}
          FTRACK_API_KEY: ${{ secrets.FTRACK_API_KEY_UNITTEST }}
  build:
    runs-on: ubuntu-latest
    name: Build package distribution
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Build
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          python setup.py sdist bdist_wheel --universal
          twine check dist/*
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  publish-test:
    name: Publish to PyPi (test)
    runs-on: ubuntu-latest
    needs: [run-tests, build]
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: staging
      url: https://test.pypi.org/project/ftrack-python-api/
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Publish to Test PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  publish-prod:
    name: Publish to PyPi (prod)
    runs-on: ubuntu-latest
    needs: [run-tests, build]
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: production
      url: https://pypi.org/project/ftrack-python-api/
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
